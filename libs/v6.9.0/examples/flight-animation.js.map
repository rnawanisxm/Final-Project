{"version":3,"file":"flight-animation.js","mappings":"oNAUMA,EAAY,IAAIC,EAAAA,EAAU,CAC9BC,OAAQ,IAAIC,EAAAA,EAAO,CACjBC,MAAO,YAILC,EAAM,IAAIC,EAAAA,EAAI,CAClBC,OAAQ,CAACP,GACTQ,OAAQ,MACRC,KAAM,IAAIC,EAAAA,GAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,MAIJC,EAAQ,IAAIC,EAAAA,GAAM,CACtBC,OAAQ,IAAIC,EAAAA,EAAO,CACjBC,MAAO,UACPC,MAAO,MAILC,EAAgB,IAAIC,EAAAA,EAAa,CACrCC,OAAO,EACPC,aACE,8EAEFC,OAAQ,WAENC,MADY,iCAETC,MAAK,SAAUC,GACd,OAAOA,EAASC,UAEjBF,MAAK,SAAUE,GAEd,IADA,IAAMC,EAAcD,EAAKE,QAChBC,EAAI,EAAGA,EAAIF,EAAYG,OAAQD,IAAK,CAC3C,IAAME,EAASJ,EAAYE,GACrBG,EAAOD,EAAO,GACdE,EAAKF,EAAO,GAQZG,EALe,IAAIC,IAAIC,YAC3B,CAACC,EAAGL,EAAK,GAAIM,EAAGN,EAAK,IACrB,CAACK,EAAGJ,EAAG,GAAIK,EAAGL,EAAG,KAGUM,IAAI,IAAK,CAACC,OAAQ,KAC/C,GAAkC,IAA9BN,EAAQO,WAAWX,OAAc,CACnC,IAAMY,EAAO,IAAIC,EAAAA,EAAWT,EAAQO,WAAW,GAAGG,QAClDF,EAAKG,UAAU,YAAa,aAQ5BC,EANgB,IAAIC,EAAAA,EAAQ,CAC1BC,SAAUN,EACVO,UAAU,IAIU,GAAJpB,IAGtB9B,EAAUmD,GAAG,aAAcC,SAK7BC,EAAe,IAAIC,EAAAA,EAAY,CACnCpD,OAAQiB,EACRN,MAAO,SAAU0C,GAGf,OAAIA,EAAQC,IAAI,YACP3C,EAEA,QAKbR,EAAIoD,SAASJ,GAGb,SAASD,EAAeM,GACtB,IAAMC,GAAgBC,EAAAA,EAAAA,IAAiBF,GACjCG,EAAaH,EAAMG,WACzBF,EAAcG,SAASjD,GAGvB,IADA,IAAMkD,EAAW5C,EAAc6C,cACtBlC,EAAI,EAAGA,EAAIiC,EAAShC,OAAQD,IAAK,CACxC,IAAMyB,EAAUQ,EAASjC,GACzB,IAAKyB,EAAQC,IAAI,YAAa,CAE5B,IAAMX,EAASU,EAAQU,cAAcC,iBAE/BC,EAbQ,IAYMN,EAAWO,KAAOb,EAAQC,IAAI,UAG9CW,GAAiBtB,EAAOd,QAC1BwB,EAAQc,IAAI,YAAY,GAG1B,IAAMC,EAAWC,KAAKC,IAAIL,EAAetB,EAAOd,QAC1C0C,EAAc,IAAI7B,EAAAA,EAAWC,EAAO6B,MAAM,EAAGJ,IAGnDX,EAAcgB,aAAaF,IAI/BpE,EAAIuE,SAGN,SAAS7B,EAASQ,EAASsB,GACzBC,OAAOC,YAAW,WAChBxB,EAAQc,IAAI,QAASW,KAAKC,OAC1B9D,EAAc+D,WAAW3B,KACxBsB,M","sources":["webpack:///./flight-animation.js"],"sourcesContent":["import Feature from '../src/ol/Feature.js';\nimport LineString from '../src/ol/geom/LineString.js';\nimport Map from '../src/ol/Map.js';\nimport Stamen from '../src/ol/source/Stamen.js';\nimport VectorSource from '../src/ol/source/Vector.js';\nimport View from '../src/ol/View.js';\nimport {Stroke, Style} from '../src/ol/style.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport {getVectorContext} from '../src/ol/render.js';\n\nconst tileLayer = new TileLayer({\n  source: new Stamen({\n    layer: 'toner',\n  }),\n});\n\nconst map = new Map({\n  layers: [tileLayer],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2,\n  }),\n});\n\nconst style = new Style({\n  stroke: new Stroke({\n    color: '#EAE911',\n    width: 2,\n  }),\n});\n\nconst flightsSource = new VectorSource({\n  wrapX: false,\n  attributions:\n    'Flight data by ' +\n    '<a href=\"https://openflights.org/data.html\">OpenFlights</a>,',\n  loader: function () {\n    const url = 'data/openflights/flights.json';\n    fetch(url)\n      .then(function (response) {\n        return response.json();\n      })\n      .then(function (json) {\n        const flightsData = json.flights;\n        for (let i = 0; i < flightsData.length; i++) {\n          const flight = flightsData[i];\n          const from = flight[0];\n          const to = flight[1];\n\n          // create an arc circle between the two locations\n          const arcGenerator = new arc.GreatCircle(\n            {x: from[1], y: from[0]},\n            {x: to[1], y: to[0]}\n          );\n\n          const arcLine = arcGenerator.Arc(100, {offset: 10});\n          if (arcLine.geometries.length === 1) {\n            const line = new LineString(arcLine.geometries[0].coords);\n            line.transform('EPSG:4326', 'EPSG:3857');\n\n            const feature = new Feature({\n              geometry: line,\n              finished: false,\n            });\n            // add the feature with a delay so that the animation\n            // for all features does not start at the same time\n            addLater(feature, i * 50);\n          }\n        }\n        tileLayer.on('postrender', animateFlights);\n      });\n  },\n});\n\nconst flightsLayer = new VectorLayer({\n  source: flightsSource,\n  style: function (feature) {\n    // if the animation is still active for a feature, do not\n    // render the feature with the layer style\n    if (feature.get('finished')) {\n      return style;\n    } else {\n      return null;\n    }\n  },\n});\n\nmap.addLayer(flightsLayer);\n\nconst pointsPerMs = 0.1;\nfunction animateFlights(event) {\n  const vectorContext = getVectorContext(event);\n  const frameState = event.frameState;\n  vectorContext.setStyle(style);\n\n  const features = flightsSource.getFeatures();\n  for (let i = 0; i < features.length; i++) {\n    const feature = features[i];\n    if (!feature.get('finished')) {\n      // only draw the lines for which the animation has not finished yet\n      const coords = feature.getGeometry().getCoordinates();\n      const elapsedTime = frameState.time - feature.get('start');\n      const elapsedPoints = elapsedTime * pointsPerMs;\n\n      if (elapsedPoints >= coords.length) {\n        feature.set('finished', true);\n      }\n\n      const maxIndex = Math.min(elapsedPoints, coords.length);\n      const currentLine = new LineString(coords.slice(0, maxIndex));\n\n      // directly draw the line with the vector context\n      vectorContext.drawGeometry(currentLine);\n    }\n  }\n  // tell OpenLayers to continue the animation\n  map.render();\n}\n\nfunction addLater(feature, timeout) {\n  window.setTimeout(function () {\n    feature.set('start', Date.now());\n    flightsSource.addFeature(feature);\n  }, timeout);\n}\n"],"names":["tileLayer","TileLayer","source","Stamen","layer","map","Map","layers","target","view","View","center","zoom","style","Style","stroke","Stroke","color","width","flightsSource","VectorSource","wrapX","attributions","loader","fetch","then","response","json","flightsData","flights","i","length","flight","from","to","arcLine","arc","GreatCircle","x","y","Arc","offset","geometries","line","LineString","coords","transform","addLater","Feature","geometry","finished","on","animateFlights","flightsLayer","VectorLayer","feature","get","addLayer","event","vectorContext","getVectorContext","frameState","setStyle","features","getFeatures","getGeometry","getCoordinates","elapsedPoints","time","set","maxIndex","Math","min","currentLine","slice","drawGeometry","render","timeout","window","setTimeout","Date","now","addFeature"],"sourceRoot":""}