{"version":3,"file":"vector-layer.js","mappings":"8FA4EIA,E,iGArEEC,EAAQ,IAAIC,EAAAA,GAAM,CACtBC,KAAM,IAAIC,EAAAA,EAAK,CACbC,MAAO,6BAETC,OAAQ,IAAIC,EAAAA,EAAO,CACjBF,MAAO,UACPG,MAAO,IAETC,KAAM,IAAIC,EAAAA,EAAK,CACbC,KAAM,0BACNR,KAAM,IAAIC,EAAAA,EAAK,CACbC,MAAO,SAETC,OAAQ,IAAIC,EAAAA,EAAO,CACjBF,MAAO,OACPG,MAAO,QAKPI,EAAc,IAAIC,EAAAA,EAAY,CAClCC,OAAQ,IAAIC,EAAAA,EAAa,CACvBC,IAAK,iCACLC,OAAQ,IAAIC,EAAAA,IAEdjB,MAAO,SAAUkB,GAEf,OADAlB,EAAMmB,UAAUC,QAAQF,EAAQG,IAAI,SAC7BrB,KAILsB,EAAM,IAAIC,EAAAA,EAAI,CAClBC,OAAQ,CAACb,GACTc,OAAQ,MACRC,KAAM,IAAIC,EAAAA,GAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,MAIJC,EAAiB,IAAI7B,EAAAA,GAAM,CAC/BI,OAAQ,IAAIC,EAAAA,EAAO,CACjBF,MAAO,OACPG,MAAO,IAETL,KAAM,IAAIC,EAAAA,EAAK,CACbC,MAAO,sBAETI,KAAM,IAAIC,EAAAA,EAAK,CACbC,KAAM,0BACNR,KAAM,IAAIC,EAAAA,EAAK,CACbC,MAAO,SAETC,OAAQ,IAAIC,EAAAA,EAAO,CACjBF,MAAO,OACPG,MAAO,QAKPwB,EAAiB,IAAInB,EAAAA,EAAY,CACrCC,OAAQ,IAAIC,EAAAA,EACZQ,IAAKA,EACLtB,MAAO,SAAUkB,GAEf,OADAY,EAAeX,UAAUC,QAAQF,EAAQG,IAAI,SACtCS,KAKLE,EAAqB,SAAUC,GACnC,IAAMf,EAAUI,EAAIY,sBAAsBD,GAAO,SAAUf,GACzD,OAAOA,KAGHiB,EAAOC,SAASC,eAAe,QAEnCF,EAAKG,UADHpB,EACeA,EAAQqB,QAAU,KAAOrB,EAAQG,IAAI,QAErC,SAGfH,IAAYnB,IACVA,GACFgC,EAAeS,YAAYC,cAAc1C,GAEvCmB,GACFa,EAAeS,YAAYE,WAAWxB,GAExCnB,EAAYmB,IAIhBI,EAAIqB,GAAG,eAAe,SAAUC,GAC9B,IAAIA,EAAIC,SAAR,CAGA,IAAMZ,EAAQX,EAAIwB,cAAcF,EAAIG,eACpCf,EAAmBC,OAGrBX,EAAIqB,GAAG,SAAS,SAAUC,GACxBZ,EAAmBY,EAAIX,Y","sources":["webpack:///./vector-layer.js"],"sourcesContent":["import GeoJSON from '../src/ol/format/GeoJSON.js';\nimport Map from '../src/ol/Map.js';\nimport VectorLayer from '../src/ol/layer/Vector.js';\nimport VectorSource from '../src/ol/source/Vector.js';\nimport View from '../src/ol/View.js';\nimport {Fill, Stroke, Style, Text} from '../src/ol/style.js';\n\nconst style = new Style({\n  fill: new Fill({\n    color: 'rgba(255, 255, 255, 0.6)',\n  }),\n  stroke: new Stroke({\n    color: '#319FD3',\n    width: 1,\n  }),\n  text: new Text({\n    font: '12px Calibri,sans-serif',\n    fill: new Fill({\n      color: '#000',\n    }),\n    stroke: new Stroke({\n      color: '#fff',\n      width: 3,\n    }),\n  }),\n});\n\nconst vectorLayer = new VectorLayer({\n  source: new VectorSource({\n    url: 'data/geojson/countries.geojson',\n    format: new GeoJSON(),\n  }),\n  style: function (feature) {\n    style.getText().setText(feature.get('name'));\n    return style;\n  },\n});\n\nconst map = new Map({\n  layers: [vectorLayer],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 1,\n  }),\n});\n\nconst highlightStyle = new Style({\n  stroke: new Stroke({\n    color: '#f00',\n    width: 1,\n  }),\n  fill: new Fill({\n    color: 'rgba(255,0,0,0.1)',\n  }),\n  text: new Text({\n    font: '12px Calibri,sans-serif',\n    fill: new Fill({\n      color: '#000',\n    }),\n    stroke: new Stroke({\n      color: '#f00',\n      width: 3,\n    }),\n  }),\n});\n\nconst featureOverlay = new VectorLayer({\n  source: new VectorSource(),\n  map: map,\n  style: function (feature) {\n    highlightStyle.getText().setText(feature.get('name'));\n    return highlightStyle;\n  },\n});\n\nlet highlight;\nconst displayFeatureInfo = function (pixel) {\n  const feature = map.forEachFeatureAtPixel(pixel, function (feature) {\n    return feature;\n  });\n\n  const info = document.getElementById('info');\n  if (feature) {\n    info.innerHTML = feature.getId() + ': ' + feature.get('name');\n  } else {\n    info.innerHTML = '&nbsp;';\n  }\n\n  if (feature !== highlight) {\n    if (highlight) {\n      featureOverlay.getSource().removeFeature(highlight);\n    }\n    if (feature) {\n      featureOverlay.getSource().addFeature(feature);\n    }\n    highlight = feature;\n  }\n};\n\nmap.on('pointermove', function (evt) {\n  if (evt.dragging) {\n    return;\n  }\n  const pixel = map.getEventPixel(evt.originalEvent);\n  displayFeatureInfo(pixel);\n});\n\nmap.on('click', function (evt) {\n  displayFeatureInfo(evt.pixel);\n});\n"],"names":["highlight","style","Style","fill","Fill","color","stroke","Stroke","width","text","Text","font","vectorLayer","VectorLayer","source","VectorSource","url","format","GeoJSON","feature","getText","setText","get","map","Map","layers","target","view","View","center","zoom","highlightStyle","featureOverlay","displayFeatureInfo","pixel","forEachFeatureAtPixel","info","document","getElementById","innerHTML","getId","getSource","removeFeature","addFeature","on","evt","dragging","getEventPixel","originalEvent"],"sourceRoot":""}