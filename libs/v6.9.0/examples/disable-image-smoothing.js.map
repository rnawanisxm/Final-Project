{"version":3,"file":"disable-image-smoothing.js","mappings":"2IAKMA,EAAM,oCACNC,EACJ,4LAGIC,EAAgB,IAAIC,EAAAA,EAAU,CAElCC,UAAW,eACXC,OAAQ,IAAIC,EAAAA,EAAI,CACdL,aAAcA,EACdM,IACE,kEAAoEP,EACtEQ,QAAS,GACTC,YAAa,GACbC,gBAAgB,MAIdC,EAAU,IAAIR,EAAAA,EAAU,CAC5BC,UAAW,mBACXC,OAAQ,IAAIC,EAAAA,EAAI,CACdL,aAAcA,EACdM,IAAK,gEAAkEP,EACvEQ,QAAS,GACTC,YAAa,OAIXG,EAAe,IAAIT,EAAAA,EAAU,CACjCE,OAAQ,IAAIC,EAAAA,EAAI,CACdL,aAAcA,EACdM,IACE,kEAAoEP,EACtEQ,QAAS,GACTC,YAAa,OAIjBE,EAAQE,GAAG,aAAa,SAAUC,GAEH,IAAzBH,EAAQI,eACVD,EAAIE,QAAQC,UAAY,QACxBH,EAAIE,QAAQE,SACV,EACA,EACAJ,EAAIE,QAAQG,OAAOC,MACnBN,EAAIE,QAAQG,OAAOE,YAKzB,IAAMC,EAAUC,SAASC,eAAe,WAClCC,EAASF,SAASC,eAAe,UACjCE,EAAW,WACfD,EAAOE,UAAYL,EAAQM,MAC3BjB,EAAQkB,WAAWP,EAAQM,MAAQ,MAErCN,EAAQQ,iBAAiB,QAASJ,GAClCJ,EAAQQ,iBAAiB,SAAUJ,GACnCD,EAAOE,UAAYL,EAAQM,MAC3BjB,EAAQkB,WAAWP,EAAQM,MAAQ,KAEnC,IAAMG,EAAO,IAAIC,EAAAA,GAAK,CACpBC,OAAQ,CAAC,MAAO,SAChBC,KAAM,GACNC,WAAY,cAGRC,EAAO,IAAIC,EAAAA,EAAI,CACnBC,OAAQ,OACRC,OAAQ,CAACrC,EAAeS,GACxBoB,KAAMA,IAGFS,EAAO,IAAIH,EAAAA,EAAI,CACnBC,OAAQ,OACRC,OAAQ,CAAC3B,GACTmB,KAAMA,IAGFU,EAAQlB,SAASC,eAAe,SAChCkB,EAAQnB,SAASC,eAAe,SAEhCmB,EAAiB,SAAU7B,GAC3BA,EAAI8B,WAGRR,EAAKS,oBACH/B,EAAIgC,OACJ,SAAUC,EAAOD,GACf,IAAMzB,EAC0D,IAAzC,IAAXyB,EAAM,GAAW,IAAiB,IAAXA,EAAM,GAAWA,EAAM,IAAvD,IACHL,EAAMd,UAAYN,EAAO2B,QAAQ,KAEnC,CACEC,YAAa,SAAUF,GACrB,OAAOA,IAAU7C,KAIvBsC,EAAKK,oBACH/B,EAAIgC,OACJ,SAAUC,EAAOD,GACf,IAAMzB,EAC0D,IAAzC,IAAXyB,EAAM,GAAW,IAAiB,IAAXA,EAAM,GAAWA,EAAM,IAAvD,IACHJ,EAAMf,UAAYN,EAAO2B,QAAQ,KAEnC,CACEC,YAAa,SAAUF,GACrB,OAAOA,IAAUnC,OAMzBwB,EAAKvB,GAAG,cAAe8B,GACvBH,EAAK3B,GAAG,cAAe8B,K","sources":["webpack:///./disable-image-smoothing.js"],"sourcesContent":["import Map from '../src/ol/Map.js';\nimport TileLayer from '../src/ol/layer/Tile.js';\nimport View from '../src/ol/View.js';\nimport XYZ from '../src/ol/source/XYZ.js';\n\nconst key = 'get_your_own_D6rA4zTHduk6KOKTXzGB';\nconst attributions =\n  '<a href=\"https://www.maptiler.com/copyright/\" target=\"_blank\">&copy; MapTiler</a> ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">&copy; OpenStreetMap contributors</a>';\n\nconst disabledLayer = new TileLayer({\n  // specify className so forEachLayerAtPixel can distinguish layers\n  className: 'ol-layer-dem',\n  source: new XYZ({\n    attributions: attributions,\n    url:\n      'https://api.maptiler.com/tiles/terrain-rgb/{z}/{x}/{y}.png?key=' + key,\n    maxZoom: 10,\n    crossOrigin: '',\n    imageSmoothing: false,\n  }),\n});\n\nconst imagery = new TileLayer({\n  className: 'ol-layer-imagery',\n  source: new XYZ({\n    attributions: attributions,\n    url: 'https://api.maptiler.com/tiles/satellite/{z}/{x}/{y}.jpg?key=' + key,\n    maxZoom: 20,\n    crossOrigin: '',\n  }),\n});\n\nconst enabledLayer = new TileLayer({\n  source: new XYZ({\n    attributions: attributions,\n    url:\n      'https://api.maptiler.com/tiles/terrain-rgb/{z}/{x}/{y}.png?key=' + key,\n    maxZoom: 10,\n    crossOrigin: '',\n  }),\n});\n\nimagery.on('prerender', function (evt) {\n  // use opaque background to conceal DEM while fully opaque imagery renders\n  if (imagery.getOpacity() === 1) {\n    evt.context.fillStyle = 'white';\n    evt.context.fillRect(\n      0,\n      0,\n      evt.context.canvas.width,\n      evt.context.canvas.height\n    );\n  }\n});\n\nconst control = document.getElementById('opacity');\nconst output = document.getElementById('output');\nconst listener = function () {\n  output.innerText = control.value;\n  imagery.setOpacity(control.value / 100);\n};\ncontrol.addEventListener('input', listener);\ncontrol.addEventListener('change', listener);\noutput.innerText = control.value;\nimagery.setOpacity(control.value / 100);\n\nconst view = new View({\n  center: [6.893, 45.8295],\n  zoom: 16,\n  projection: 'EPSG:4326',\n});\n\nconst map1 = new Map({\n  target: 'map1',\n  layers: [disabledLayer, imagery],\n  view: view,\n});\n\nconst map2 = new Map({\n  target: 'map2',\n  layers: [enabledLayer],\n  view: view,\n});\n\nconst info1 = document.getElementById('info1');\nconst info2 = document.getElementById('info2');\n\nconst showElevations = function (evt) {\n  if (evt.dragging) {\n    return;\n  }\n  map1.forEachLayerAtPixel(\n    evt.pixel,\n    function (layer, pixel) {\n      const height =\n        -10000 + (pixel[0] * 256 * 256 + pixel[1] * 256 + pixel[2]) * 0.1;\n      info1.innerText = height.toFixed(1);\n    },\n    {\n      layerFilter: function (layer) {\n        return layer === disabledLayer;\n      },\n    }\n  );\n  map2.forEachLayerAtPixel(\n    evt.pixel,\n    function (layer, pixel) {\n      const height =\n        -10000 + (pixel[0] * 256 * 256 + pixel[1] * 256 + pixel[2]) * 0.1;\n      info2.innerText = height.toFixed(1);\n    },\n    {\n      layerFilter: function (layer) {\n        return layer === enabledLayer;\n      },\n    }\n  );\n};\n\nmap1.on('pointermove', showElevations);\nmap2.on('pointermove', showElevations);\n"],"names":["key","attributions","disabledLayer","TileLayer","className","source","XYZ","url","maxZoom","crossOrigin","imageSmoothing","imagery","enabledLayer","on","evt","getOpacity","context","fillStyle","fillRect","canvas","width","height","control","document","getElementById","output","listener","innerText","value","setOpacity","addEventListener","view","View","center","zoom","projection","map1","Map","target","layers","map2","info1","info2","showElevations","dragging","forEachLayerAtPixel","pixel","layer","toFixed","layerFilter"],"sourceRoot":""}