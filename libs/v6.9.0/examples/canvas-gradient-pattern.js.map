{"version":3,"file":"canvas-gradient-pattern.js","mappings":"+FAkBQA,E,4GATFC,EAASC,SAASC,cAAc,UAChCC,EAAUH,EAAOI,WAAW,MAI5BC,EAAaC,EAAAA,GAGbC,IACER,EAAOI,EAAQK,qBAAqB,EAAG,EAAG,IAAMH,EAAY,IAC7DI,aAAa,EAAG,OACrBV,EAAKU,aAAa,EAAI,EAAG,UACzBV,EAAKU,aAAa,EAAI,EAAG,UACzBV,EAAKU,aAAa,GAAO,SACzBV,EAAKU,aAAa,EAAI,EAAG,QACzBV,EAAKU,aAAa,EAAI,EAAG,QACzBV,EAAKU,aAAa,EAAG,UACdV,GAIHW,GACJV,EAAOW,MAAQ,EAAIN,EACnBL,EAAOY,OAAS,EAAIP,EAEpBF,EAAQU,UAAY,QACpBV,EAAQW,SAAS,EAAG,EAAGd,EAAOW,MAAOX,EAAOY,QAE5CT,EAAQU,UAAY,yBACpBV,EAAQY,YACRZ,EAAQa,IAAI,EAAIX,EAAY,EAAIA,EAAY,EAAIA,EAAY,EAAG,EAAIY,KAAKC,IACxEf,EAAQgB,OAERhB,EAAQU,UAAY,kBACpBV,EAAQY,YACRZ,EAAQa,IAAI,EAAIX,EAAY,EAAIA,EAAY,IAAMA,EAAY,EAAG,EAAIY,KAAKC,IAC1Ef,EAAQgB,OACDhB,EAAQiB,cAAcpB,EAAQ,WAIjCmB,EAAO,IAAIE,EAAAA,EACXC,EAAQ,IAAIC,EAAAA,GAAM,CACtBJ,KAAMA,EACNK,OAAQ,IAAIC,EAAAA,EAAO,CACjBC,MAAO,OACPf,MAAO,MAkBLgB,EAAc,IAAIC,EAAAA,EAAY,CAClCC,OAAQ,IAAIC,EAAAA,EAAa,CACvBC,IAAK,iCACLC,OAAQ,IAAIC,EAAAA,IAEdX,MAZsB,SAAUY,GAChC,IAAMC,EAAKD,EAAQE,QAEnB,OADAjB,EAAKkB,SAASF,EAAK,IAAM5B,EAAWG,GAC7BY,KAaG,IAAIgB,EAAAA,EAAI,CAClBC,OAAQ,CAACZ,GACTa,OAAQ,MACRC,KAAM,IAAIC,EAAAA,GAAK,CACbC,QAAQC,EAAAA,EAAAA,IAAW,CAAC,GAAI,KACxBC,KAAM,Q","sources":["webpack:///./canvas-gradient-pattern.js"],"sourcesContent":["import GeoJSON from '../src/ol/format/GeoJSON.js';\nimport Map from '../src/ol/Map.js';\nimport VectorLayer from '../src/ol/layer/Vector.js';\nimport VectorSource from '../src/ol/source/Vector.js';\nimport View from '../src/ol/View.js';\nimport {DEVICE_PIXEL_RATIO} from '../src/ol/has.js';\nimport {Fill, Stroke, Style} from '../src/ol/style.js';\nimport {fromLonLat} from '../src/ol/proj.js';\n\nconst canvas = document.createElement('canvas');\nconst context = canvas.getContext('2d');\n\n// Gradient and pattern are in canvas pixel space, so we adjust for the\n// renderer's pixel ratio\nconst pixelRatio = DEVICE_PIXEL_RATIO;\n\n// Generate a rainbow gradient\nconst gradient = (function () {\n  const grad = context.createLinearGradient(0, 0, 512 * pixelRatio, 0);\n  grad.addColorStop(0, 'red');\n  grad.addColorStop(1 / 6, 'orange');\n  grad.addColorStop(2 / 6, 'yellow');\n  grad.addColorStop(3 / 6, 'green');\n  grad.addColorStop(4 / 6, 'aqua');\n  grad.addColorStop(5 / 6, 'blue');\n  grad.addColorStop(1, 'purple');\n  return grad;\n})();\n\n// Generate a canvasPattern with two circles on white background\nconst pattern = (function () {\n  canvas.width = 8 * pixelRatio;\n  canvas.height = 8 * pixelRatio;\n  // white background\n  context.fillStyle = 'white';\n  context.fillRect(0, 0, canvas.width, canvas.height);\n  // outer circle\n  context.fillStyle = 'rgba(102, 0, 102, 0.5)';\n  context.beginPath();\n  context.arc(4 * pixelRatio, 4 * pixelRatio, 3 * pixelRatio, 0, 2 * Math.PI);\n  context.fill();\n  // inner circle\n  context.fillStyle = 'rgb(55, 0, 170)';\n  context.beginPath();\n  context.arc(4 * pixelRatio, 4 * pixelRatio, 1.5 * pixelRatio, 0, 2 * Math.PI);\n  context.fill();\n  return context.createPattern(canvas, 'repeat');\n})();\n\n// Generate style for gradient or pattern fill\nconst fill = new Fill();\nconst style = new Style({\n  fill: fill,\n  stroke: new Stroke({\n    color: '#333',\n    width: 2,\n  }),\n});\n\n/**\n * The styling function for the vector layer, will return an array of styles\n * which either contains the aboove gradient or pattern.\n *\n * @param {import(\"../src/ol/Feature.js\").default} feature The feature to style.\n * @return {Style} The style to use for the feature.\n */\nconst getStackedStyle = function (feature) {\n  const id = feature.getId();\n  fill.setColor(id > 'J' ? gradient : pattern);\n  return style;\n};\n\n// Create a vector layer that makes use of the style function above…\nconst vectorLayer = new VectorLayer({\n  source: new VectorSource({\n    url: 'data/geojson/countries.geojson',\n    format: new GeoJSON(),\n  }),\n  style: getStackedStyle,\n});\n\n// … finally create a map with that layer.\nconst map = new Map({\n  layers: [vectorLayer],\n  target: 'map',\n  view: new View({\n    center: fromLonLat([16, 48]),\n    zoom: 3,\n  }),\n});\n"],"names":["grad","canvas","document","createElement","context","getContext","pixelRatio","DEVICE_PIXEL_RATIO","gradient","createLinearGradient","addColorStop","pattern","width","height","fillStyle","fillRect","beginPath","arc","Math","PI","fill","createPattern","Fill","style","Style","stroke","Stroke","color","vectorLayer","VectorLayer","source","VectorSource","url","format","GeoJSON","feature","id","getId","setColor","Map","layers","target","view","View","center","fromLonLat","zoom"],"sourceRoot":""}