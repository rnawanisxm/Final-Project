{"version":3,"file":"box-selection.js","mappings":"2MAQMA,EAAe,IAAIC,EAAAA,EAAa,CACpCC,IAAK,iCACLC,OAAQ,IAAIC,EAAAA,IAGRC,EAAM,IAAIC,EAAAA,EAAI,CAClBC,OAAQ,CACN,IAAIC,EAAAA,EAAU,CACZC,OAAQ,IAAIC,EAAAA,IAEd,IAAIC,EAAAA,EAAY,CACdF,OAAQT,KAGZY,OAAQ,MACRC,KAAM,IAAIC,EAAAA,GAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,EACNC,kBAAmB,OAKjBC,EAAS,IAAIC,EAAAA,EACnBd,EAAIe,eAAeF,GAEnB,IAAMG,EAAmBH,EAAOI,cAG1BC,EAAU,IAAIC,EAAAA,EAAQ,CAC1BC,UAAWC,EAAAA,KAGbrB,EAAIe,eAAeG,GAEnBA,EAAQI,GAAG,UAAU,WAOnB,IAAMC,EAAWvB,EAAIwB,UAAUC,cACzBC,EAAUH,GAAYI,KAAKC,GAAK,IAAO,EACvCC,EAAoBH,EAAU,GAAKV,EACnCc,EAASZ,EAAQa,cAAcC,YAUrC,GATArC,EAAasC,iCAAiCH,GAAQ,SAAUI,GAC9DL,EAAkBM,KAAKD,MAQrBR,EAAS,CACX,IAAMU,EAAS,CAAC,EAAG,GACbC,EAAWnB,EAAQa,cAAcO,QACvCD,EAASE,QAAQhB,EAAUa,GAC3B,IAAMN,EAASO,EAASL,YACxBH,EAAkBW,SAAQ,SAAUN,GAClC,IAAMG,EAAWH,EAAQH,cAAcO,QACvCD,EAASE,QAAQhB,EAAUa,GACvBC,EAASI,iBAAiBX,IAC5Bd,EAAiBmB,KAAKD,UAO9BhB,EAAQI,GAAG,YAAY,WACrBN,EAAiB0B,WAGnB,IAAMC,EAAUC,SAASC,eAAe,QAExC7B,EAAiBM,GAAG,CAAC,MAAO,WAAW,WACrC,IAAMwB,EAAQ9B,EAAiB+B,WAAW/C,KAAI,SAAUkC,GACtD,OAAOA,EAAQc,IAAI,WAEjBF,EAAMG,OAAS,EACjBN,EAAQO,UAAYJ,EAAMK,KAAK,MAE/BR,EAAQO,UAAY,6B","sources":["webpack:///./box-selection.js"],"sourcesContent":["import GeoJSON from '../src/ol/format/GeoJSON.js';\nimport Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {DragBox, Select} from '../src/ol/interaction.js';\nimport {OSM, Vector as VectorSource} from '../src/ol/source.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport {platformModifierKeyOnly} from '../src/ol/events/condition.js';\n\nconst vectorSource = new VectorSource({\n  url: 'data/geojson/countries.geojson',\n  format: new GeoJSON(),\n});\n\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new OSM(),\n    }),\n    new VectorLayer({\n      source: vectorSource,\n    }),\n  ],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2,\n    constrainRotation: 16,\n  }),\n});\n\n// a normal select interaction to handle click\nconst select = new Select();\nmap.addInteraction(select);\n\nconst selectedFeatures = select.getFeatures();\n\n// a DragBox interaction used to select features by drawing boxes\nconst dragBox = new DragBox({\n  condition: platformModifierKeyOnly,\n});\n\nmap.addInteraction(dragBox);\n\ndragBox.on('boxend', function () {\n  // features that intersect the box geometry are added to the\n  // collection of selected features\n\n  // if the view is not obliquely rotated the box geometry and\n  // its extent are equalivalent so intersecting features can\n  // be added directly to the collection\n  const rotation = map.getView().getRotation();\n  const oblique = rotation % (Math.PI / 2) !== 0;\n  const candidateFeatures = oblique ? [] : selectedFeatures;\n  const extent = dragBox.getGeometry().getExtent();\n  vectorSource.forEachFeatureIntersectingExtent(extent, function (feature) {\n    candidateFeatures.push(feature);\n  });\n\n  // when the view is obliquely rotated the box extent will\n  // exceed its geometry so both the box and the candidate\n  // feature geometries are rotated around a common anchor\n  // to confirm that, with the box geometry aligned with its\n  // extent, the geometries intersect\n  if (oblique) {\n    const anchor = [0, 0];\n    const geometry = dragBox.getGeometry().clone();\n    geometry.rotate(-rotation, anchor);\n    const extent = geometry.getExtent();\n    candidateFeatures.forEach(function (feature) {\n      const geometry = feature.getGeometry().clone();\n      geometry.rotate(-rotation, anchor);\n      if (geometry.intersectsExtent(extent)) {\n        selectedFeatures.push(feature);\n      }\n    });\n  }\n});\n\n// clear selection when drawing a new box and when clicking on the map\ndragBox.on('boxstart', function () {\n  selectedFeatures.clear();\n});\n\nconst infoBox = document.getElementById('info');\n\nselectedFeatures.on(['add', 'remove'], function () {\n  const names = selectedFeatures.getArray().map(function (feature) {\n    return feature.get('name');\n  });\n  if (names.length > 0) {\n    infoBox.innerHTML = names.join(', ');\n  } else {\n    infoBox.innerHTML = 'No countries selected';\n  }\n});\n"],"names":["vectorSource","VectorSource","url","format","GeoJSON","map","Map","layers","TileLayer","source","OSM","VectorLayer","target","view","View","center","zoom","constrainRotation","select","Select","addInteraction","selectedFeatures","getFeatures","dragBox","DragBox","condition","platformModifierKeyOnly","on","rotation","getView","getRotation","oblique","Math","PI","candidateFeatures","extent","getGeometry","getExtent","forEachFeatureIntersectingExtent","feature","push","anchor","geometry","clone","rotate","forEach","intersectsExtent","clear","infoBox","document","getElementById","names","getArray","get","length","innerHTML","join"],"sourceRoot":""}